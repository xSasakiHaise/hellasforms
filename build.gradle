plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

version = "2.5.0"
group = "com.xsasakihaise.hellasforms"

base {
    archivesName = "hellasforms"
}
java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {

    mappings channel: 'parchment', version: '2022.03.06-1.16.5'

    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                "${hellasforms}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', "hellasforms"
        }

        server {
            property 'forge.enabledGameTestNamespaces', "hellasforms"
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', "hellasforms"
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', "hellasforms", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://repo.lucko.me/' }
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
    maven { url = "https://jitpack.io" }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }
    ivy {
        setUrl('https://download.nodecdn.net/containers/reforged/universal/release')

        metadataSources {
            artifact()
        }
        patternLayout {
            artifact('[artifact].[ext]')
        }
    }
}


dependencies {
    compileOnly files('C:/Users/raehr/Documents/Hellas/HellasControl/build/libs/hellascontrol-1.0.0.jar')
    minecraft "net.minecraftforge:forge:1.16.5-36.2.42"

    implementation files('libs/Pixelmon-1.16.5-9.1.13-universal.jar')
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'

}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    setArchiveBaseName(rootProject.name + '-Forge')


    exclude 'net.minecraft'
    exclude "**/module-info.class"
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : "HellasForms",
                'Specification-Vendor'    : "xSasaki_Haise",
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : "hellasforms",
                'Implementation-Version'  : "com.xsasakihaise.hellasforms",
                'Implementation-Vendor'   : "xSasaki_Haise",
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task versionedRelease(type: Copy) {
    delete fileTree('release/') {
        include '**/*.jar'
    }
    group "build"
    from('./build/com.xsasakihaise.hellasforms.libs/' + rootProject.name + '-Forge.jar')
    into('release/')
    include '*.jar'
    rename { String filename ->
        filename.replace(".jar", "-${project.version}.jar")
    }
}

javadoc {
    options {
        links 'https://reforged.gg/docs/1201/'
    }
}

jar.finalizedBy('shadowJar')
shadowJar.finalizedBy('reobfJar')
build.finalizedBy('versionedRelease')